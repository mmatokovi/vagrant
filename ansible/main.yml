---
- hosts: all
  name: Zagrabi.io server and application setup
  become: yes

  tasks:
  - name: Add repository for PHP versions (Ubuntu).
    apt_repository: repo='ppa:ondrej/php'
      
  - name: Install PHP
    apt:
      name:
        - php8.1
        - php8.1-fpm
        - php8.1-common
        - php8.1-zip
        - php8.1-curl
        - php8.1-xml
        - php8.1-xml
        - php8.1-ldap
        - php8.1-imap
        - php8.1-mbstring
        - php8.1-mysql
        - php8.1-pdo
        - php8.1-intl
        - php8.1-cli
        - php8.1-bcmath
        - php8.1-opcache
        - php8.1-pgsql
        - php8.1-pdo
        - php8.1-redis
        - php-xdebug
      state: present

  - name: Configure PHP (FPM)
    copy:
      src: /ansible/assets/php-fpm.ini
      dest: /etc/php/8.1/fpm/php.ini

  - name: Install composer
    include_role:
      name: composer

  - name: Install node
    include_role:
      name: node

  - name: Install Redis
    apt:
      name: redis
      state: present

  - name: Install Supervisor
    apt:
      name: supervisor
      state: present

  - name: Install Mysql
    include_role:
      name: mysql

  - name: Install nginx
    include_role:
      name: nginx


#PART 2 after git!--------------------REMOVE IF EVERYTHING SET---------------------------------------

# - name: Ensure /var/www/html directory has correct permissions.
#   file:
#     path: /var/www/html
#     state: directory
#     owner: www-data
#     group: www-data

# - name: convenient link from dev user home to site directory
#   file:
#     src: /var/www/html/zagrabi
#     dest: /home/vagrant/zagrabi
#     state: link


# - name: Clone the code repository to the docroot.
#   git:
#    repo: 'https://github.com/mmatokovi/zagrabi.git'
#    dest: /var/www/html/zagrabi
#    update: no
#   become_user: www-data

# - name: Install composer packages
#   community.general.composer:
#     command: install
#     no_dev: no
#     working_dir: /var/www/html/zagrabi
#   become_user: www-data

# - name: Copy app env
#   copy:
#     src: /var/www/html/zagrabi/.env.example
#     dest: /var/www/html/zagrabi/.env
#   become_user: www-data

# - name: generate laravel key
#   shell: php artisan key:generate
#   args:
#     chdir: /var/www/html/zagrabi
#   become_user: www-data

## PART 2 ---------------------------------------------------------------------------

# - name: link laravel storage
#   shell: php artisan storage:link
#   args:
#     chdir: /var/www/html/zagrabi

# - name: Laravel migrate
#   shell: php artisan migrate:fresh --seed
#   args:
#     chdir: /var/www/html/zagrabi

# - name: Install npm packages
#   community.general.npm:
#     path: /var/www/html/zagrabi

# - name: run webpack
#   shell: npm run build
#   args:
#     chdir: /var/www/html/ravel

# - name: add laravel artisan alias
#   lineinfile:
#     dest: /home/vagrant/.bashrc
#     line: "alias art='php artisan'"
#     owner: vagrant

#supervisord master config + horizon/larasock

# figure out
#   requirements.yml ansible-galaxy collection loading vagrant.ansible_local
#   could just run ansible-galaxy collection install -r requirements.yml in a separate ansible playbook